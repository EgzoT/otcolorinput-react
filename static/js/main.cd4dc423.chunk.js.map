{"version":3,"sources":["otcolorinput-react/components/const.js","otcolorinput-react/components/ColorButton.js","otcolorinput-react/components/ColorPalette.js","otcolorinput-react/components/ColorsWindow.js","otcolorinput-react/components/ColorsWindowMobile.js","otcolorinput-react/OTColorInput.js","App.js","index.js"],"names":["COLORS","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","outerDivStyle","width","height","borderRadius","borderStyle","borderWidth","borderColor","backgroundColor","cursor","display","innerDivStyle","margin","ColorButton","props","prepareOuterDivStyle","style","prepareInnerDivStyle","colorId","onClick","state","ref","this","setRef","React","Component","ColorPaletteRow","children","ColorPaletteColumn","onChooseButton","ColorPalette","id","hexColor","onChooseColor","rows","screenRotation","i","columns","j","push","key","colorButtonsStyle","windowStyle","position","ColorsWindow","left","posX","COLUMNS","parentWidth","top","calcPos","leftPos","current","clientWidth","document","body","topPos","posY","parentHeight","clientHeight","getColorButtonStyle","maxWidth","maxHeight","createRef","handleClickOutside","bind","addEventListener","removeEventListener","event","contains","target","buttonRef","onClickOutside","zIndex","backgroundStyle","ColorsWindowMobile","OTColorInput","checkColor","color","undefined","setColor","setState","toggleColorsWindow","isWindowOpen","closeColorsWindow","openColorsWindow","deviceType","getDeviceType","getScreenRotation","onChangeValue","value","onChange","test","navigator","userAgent","window","innerWidth","innerHeight","offsetLeft","offsetTop","offsetWidth","offsetHeight","app","textAlign","appHeader","minHeight","flexDirection","alignItems","justifyContent","fontSize","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"mPAKIA,EAAS,CACTC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,GAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,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","file":"static/js/main.cd4dc423.chunk.js","sourcesContent":["var ROWS = 7;\nvar COLUMNS = 19;\nvar MIN_COLOR = 0;\nvar MAX_COLOR = 132;\n\nvar COLORS = {\n    0:   '#ffffff',\n    1:   '#ffd4bf',\n    2:   '#ffe9bf',\n    3:   '#ffffbf',\n    4:   '#e9ffbf',\n    5:   '#d4ffbf',\n    6:   '#bfffbf',\n    7:   '#bfffd4',\n    8:   '#bfffe9',\n    9:   '#bfffff',\n    10:  '#bfe9ff',\n    11:  '#bfd4ff',\n    12:  '#bfbfff',\n    13:  '#d4bfff',\n    14:  '#e9bfff',\n    15:  '#ffbfff',\n    16:  '#ffbfe9',\n    17:  '#ffbfd4',\n    18:  '#ffbfbf',\n    19:  '#dadada',\n    20:  '#bf9f8f',\n    21:  '#bfaf8f',\n    22:  '#bfbf8f',\n    23:  '#afbf8f',\n    24:  '#9fbf8f',\n    25:  '#8fbf8f',\n    26:  '#8fbf9f',\n    27:  '#8fbfaf',\n    28:  '#8fbfbf',\n    29:  '#8fafbf',\n    30:  '#8f9fbf',\n    31:  '#8f8fbf',\n    32:  '#9f8fbf',\n    33:  '#af8fbf',\n    34:  '#bf8fbf',\n    35:  '#bf8faf',\n    36:  '#bf8f9f',\n    37:  '#bf8f8f',\n    38:  '#b6b6b6',\n    39:  '#bf7f5f',\n    40:  '#bf9f5f',\n    41:  '#bfbf5f',\n    42:  '#9fbf5f',\n    43:  '#7fbf5f',\n    44:  '#5fbf5f',\n    45:  '#5fbf7f',\n    46:  '#5fbf9f',\n    47:  '#5fbfbf',\n    48:  '#5f9fbf',\n    49:  '#5f7fbf',\n    50:  '#5f5fbf',\n    51:  '#7f5fbf',\n    52:  '#9f5fbf',\n    53:  '#bf5fbf',\n    54:  '#bf5f9f',\n    55:  '#bf5f7f',\n    56:  '#bf5f5f',\n    57:  '#919191',\n    58:  '#bf6a3f',\n    59:  '#bf943f',\n    60:  '#bfbf3f',\n    61:  '#94bf3f',\n    62:  '#6abf3f',\n    63:  '#3fbf3f',\n    64:  '#3fbf6a',\n    65:  '#3fbf94',\n    66:  '#3fbfbf',\n    67:  '#3f94bf',\n    68:  '#3f6abf',\n    69:  '#3f3fbf',\n    70:  '#6a3fbf',\n    71:  '#943fbf',\n    72:  '#bf3fbf',\n    73:  '#bf3f94',\n    74:  '#bf3f6a',\n    75:  '#bf3f3f',\n    76:  '#6d6d6d',\n    77:  '#ff5500',\n    78:  '#ffaa00',\n    79:  '#ffff00',\n    80:  '#aaff00',\n    81:  '#54ff00',\n    82:  '#00ff00',\n    83:  '#00ff55',\n    84:  '#00ffa9',\n    85:  '#00ffff',\n    86:  '#00a9ff',\n    87:  '#0054ff',\n    88:  '#0000ff',\n    89:  '#5400ff',\n    90:  '#aa00ff',\n    91:  '#ff00ff',\n    92:  '#ff00aa',\n    93:  '#ff0055',\n    94:  '#ff0000',\n    95:  '#484848',\n    96:  '#bf3f00',\n    97:  '#bf7f00',\n    98:  '#bfbf00',\n    99:  '#7fbf00',\n    100: '#3fbf00',\n    101: '#00bf00',\n    102: '#00bf3f',\n    103: '#00bf7f',\n    104: '#00bfbf',\n    105: '#007fbf',\n    106: '#003fbf',\n    107: '#0000bf',\n    108: '#3f00bf',\n    109: '#7f00bf',\n    110: '#bf00bf',\n    111: '#bf007f',\n    112: '#bf003f',\n    113: '#bf0000',\n    114: '#242424',\n    115: '#7f2a00',\n    116: '#7f5500',\n    117: '#7f7f00',\n    118: '#557f00',\n    119: '#2a7f00',\n    120: '#007f00',\n    121: '#007f2a',\n    122: '#007f54',\n    123: '#007f7f',\n    124: '#00547f',\n    125: '#002a7f',\n    126: '#00007f',\n    127: '#2a007f',\n    128: '#55007f',\n    129: '#7f007f',\n    130: '#7f0055',\n    131: '#7f002a',\n    132: '#7f0000'\n}\n\nexport { ROWS, COLUMNS, MIN_COLOR, MAX_COLOR, COLORS };\n","import React from 'react';\nimport { COLORS } from './const';\n\nconst outerDivStyle = {\n    width: '1.1em',\n    height: '1.1em',\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#ced4da',\n    backgroundColor: '#FFFFFF',\n    cursor: 'pointer',\n    display: 'grid'\n}\n\nconst innerDivStyle = {\n    width: 'calc(100% - 0.15em)',\n    height: 'calc(100% - 0.15em)',\n    borderRadius: 5,\n    margin: 'auto'\n}\n\nclass ColorButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    prepareOuterDivStyle = () => {\n        let style = outerDivStyle;\n\n        style = { ...style, ...this.props.outerDivStyle }\n\n        return style;\n    }\n\n    prepareInnerDivStyle = () => {\n        let style = innerDivStyle;\n\n        style = { ...style, ...this.props.innerDivStyle }\n        style = { ...style, ...{ backgroundColor: COLORS[this.props.colorId] } }\n\n        return style;\n    }\n\n    onClick = () => {\n        if (this.props.onClick) {\n            this.props.onClick(this.props.colorId, COLORS[this.props.colorId]);\n        }\n    }\n\n    render() {\n        return (\n            <div ref={ this.props.setRef } style={ this.prepareOuterDivStyle() } onClick={ this.onClick }>\n                <div style={ this.prepareInnerDivStyle() }></div>\n            </div>\n        );\n    }\n}\n\nexport default ColorButton;\n","import React from 'react';\nimport { ROWS, COLUMNS } from './const';\n\nimport ColorButton from './ColorButton';\n\nclass ColorPaletteRow extends React.Component {\n    render() {\n        return (\n            <div style={{ display: 'table-row' }}>\n                { this.props.children }\n            </div>\n        );\n    }\n}\n\nclass ColorPaletteColumn extends React.Component {\n    render() {\n        return (\n            <div style={{ display: 'table-cell' }}>\n                <ColorButton colorId={ this.props.colorId } onClick={ this.props.onChooseButton } outerDivStyle={ this.props.outerDivStyle } />\n            </div>\n        );\n    }\n}\n\nclass ColorPalette extends React.Component {\n    onChooseButton = (id, hexColor) => {\n        if (this.props.onChooseColor) {\n            this.props.onChooseColor(id, hexColor);\n        }\n    }\n\n    render() {\n        let rows = [];\n\n        if (this.props.screenRotation === 'horizontal') {\n            for (let i = 0; i < ROWS; i++) {\n                let columns = [];\n\n                for (let j = 0; j < COLUMNS; j++) {\n                    columns.push(<ColorPaletteColumn key={ i * COLUMNS + j } colorId={ i * COLUMNS + j } onChooseButton={ this.onChooseButton } outerDivStyle={ this.props.colorButtonsStyle } />);\n                }\n\n                rows.push(<ColorPaletteRow key={ i }>{ columns }</ColorPaletteRow>);\n            }\n        } else if (this.props.screenRotation === 'vertical') {\n            for (let i = 0; i < COLUMNS; i++) {\n                let columns = [];\n\n                for (let j = 0; j < ROWS; j++) {\n                    columns.push(<ColorPaletteColumn key={ i * ROWS + j } colorId={ i + j * COLUMNS } onChooseButton={ this.onChooseButton } outerDivStyle={ this.props.colorButtonsStyle } />);\n                }\n\n                rows.push(<ColorPaletteRow key={ i }>{ columns }</ColorPaletteRow>);\n            }\n        }\n\n        return (\n            <div style={{ display: 'table' }}>\n                { rows }\n            </div>\n        );\n    }\n}\n\nexport default ColorPalette;\n","import React from 'react';\nimport { COLUMNS } from './const';\n\nimport ColorPalette from './ColorPalette';\n\nconst windowStyle = {\n    position: 'absolute'\n}\n\nclass ColorsWindow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = React.createRef();\n\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n\n        this.state = {}\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n\n        this.calcPos();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    prepareOuterDivStyle = () => {\n        let style = windowStyle;\n\n        style = { ...style, ...{ left: 'calc(20em - ' + (this.props.posX / 2 + (COLUMNS * 2) - this.props.parentWidth) + 'px)', top: '' }, ...this.props.style }\n\n        return style;\n    }\n\n    calcPos = () => {\n        //Width\n        let leftPos = this.props.posX - this.ref.current.clientWidth / 2 + this.props.parentWidth / 2;\n        if (leftPos < 0) {\n            leftPos = 0;\n        } else if (leftPos + this.ref.current.clientWidth > document.body.clientWidth) {\n            leftPos = document.body.clientWidth - this.ref.current.clientWidth;\n        }\n\n        //Height\n        let topPos = this.props.posY + this.props.parentHeight;\n        if (topPos < 0) {\n            topPos = 0;\n        } else if (topPos + this.ref.current.clientHeight > document.body.clientHeight) {\n            topPos = this.props.posY - this.ref.current.clientHeight;\n        }\n\n        this.ref.current.style.left = leftPos + 'px';\n        this.ref.current.style.top = topPos + 'px';\n    }\n\n    handleClickOutside(event) {\n        if (this.ref && !this.ref.current.contains(event.target) && this.props.buttonRef && !this.props.buttonRef.current.contains(event.target)) {\n            this.props.onClickOutside();\n        }\n    }\n\n    getColorButtonStyle = () => {\n        return {\n            width: 'calc(20em / ' + COLUMNS + ')',\n            height: 'calc(20em / ' + COLUMNS + ')',\n            maxWidth: 'calc(80vw / ' + COLUMNS + ' - ' + 2 + 'px)',\n            maxHeight: 'calc(80vw / ' + COLUMNS + ' - ' + 2 + 'px)'\n        }\n    }\n\n    render() {\n        return (\n            <div ref={ this.ref } style={ this.prepareOuterDivStyle() }>\n                <ColorPalette\n                    onChooseColor={ this.props.onChooseColor }\n                    screenRotation={ 'horizontal' }\n                    colorButtonsStyle={ this.getColorButtonStyle() }\n                />\n            </div>\n        );\n    }\n}\n\nexport default ColorsWindow;\n","import React from 'react';\nimport { ROWS, COLUMNS } from './const';\n\nimport ColorPalette from './ColorPalette';\n\nconst windowStyle = {\n    position: 'absolute',\n    zIndex: 999\n}\n\nconst backgroundStyle = {\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#00000040',\n    left: 0,\n    top: 0,\n    zIndex: 998\n}\n\nclass ColorsWindowMobile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = React.createRef();\n\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n\n        this.state = {}\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n\n        this.calcPos();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    prepareOuterDivStyle = () => {\n        let style = windowStyle;\n\n        style = { ...style, ...this.props.style }\n\n        return style;\n    }\n\n    calcPos = () => {\n        //Width\n        this.ref.current.style.left = 'calc(50% - ' + this.ref.current.clientWidth / 2 + 'px)';\n\n        //Height\n        this.ref.current.style.top = 'calc(50% - ' + this.ref.current.clientHeight / 2 + 'px)';\n    }\n\n    handleClickOutside(event) {\n        if (this.ref && !this.ref.current.contains(event.target)) {\n            this.props.onClickOutside();\n        }\n    }\n\n    getColorButtonStyle = () => {\n        if (this.props.screenRotation === 'horizontal') {\n            return {\n                width: 'calc(80vw / ' + COLUMNS + ')',\n                height: 'calc(80vh / ' + ROWS + ')'\n            }\n        } else if (this.props.screenRotation === 'vertical') {\n            return {\n                width: 'calc(80vw / ' + ROWS + ')',\n                height: 'calc(80vh / ' + COLUMNS + ')'\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div style={ backgroundStyle }>\n                <div ref={ this.ref } style={ this.prepareOuterDivStyle() }>\n                    <ColorPalette\n                        onChooseColor={ this.props.onChooseColor }\n                        screenRotation={ this.props.screenRotation }\n                        colorButtonsStyle={ this.getColorButtonStyle() }\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ColorsWindowMobile;\n","import React from 'react';\nimport { MIN_COLOR, MAX_COLOR } from './components/const';\n\nimport ColorButton from './components/ColorButton';\nimport ColorsWindow from './components/ColorsWindow';\nimport ColorsWindowMobile from './components/ColorsWindowMobile';\n\nclass OTColorInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = React.createRef();\n\n        this.deviceType = this.getDeviceType();\n        this.screenRotation = this.getScreenRotation();\n\n        this.state = {\n            id: this.checkColor(this.props.value) ? this.checkColor(this.props.value) : 0,\n            isWindowOpen: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.closeColorsWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.closeColorsWindow);\n    }\n\n    checkColor = (color) => {\n        if (color === undefined) {\n            return undefined;\n        } else if (color >= MIN_COLOR && color <= MAX_COLOR) {\n            return color;\n        } else if (color > MAX_COLOR) {\n            return MAX_COLOR;\n        } else if (color < MIN_COLOR) {\n            return MIN_COLOR;\n        } else {\n            return undefined;\n        }\n    }\n\n    setColor = (color) => {\n        this.setState({ color: this.checkColor(color) });\n    }\n\n    toggleColorsWindow = () => {\n        if (this.state.isWindowOpen) {\n            this.closeColorsWindow();\n        } else {\n            this.openColorsWindow();\n        }\n    }\n\n    openColorsWindow = () => {\n        if (!this.state.isWindowOpen) {\n            this.deviceType = this.getDeviceType();\n            this.screenRotation = this.getScreenRotation();\n\n            this.setState({ isWindowOpen: true });\n        }\n    }\n\n    closeColorsWindow = () => {\n        if (this.state.isWindowOpen) {\n            this.setState({ isWindowOpen: false });\n        }\n    }\n\n    onChangeValue = (value, hexColor) => {\n        this.setState({ id: value });\n        this.closeColorsWindow();\n\n        if (this.props.onChange) {\n            this.props.onChange(value, hexColor);\n        }\n    }\n\n    getDeviceType = () => {\n        return /Android|webOS|iPhone|iPad|iPod/i.test(navigator.userAgent) ? 'mobile' : 'desktop';\n    }\n\n    getScreenRotation = () => {\n        return window.innerWidth > window.innerHeight ? 'horizontal' : 'vertical';\n    }\n\n    render() {\n        return (\n            <div>\n                <ColorButton\n                    colorId={ this.state.id }\n                    onClick={ this.toggleColorsWindow }\n                    setRef={ this.ref }\n                    outerDivStyle={{ width: '1.9em' }}\n                />\n                { this.state.isWindowOpen ?\n                    this.deviceType === 'desktop' ?\n                    <ColorsWindow\n                        onChooseColor={ this.onChangeValue }\n                        posX={ this.ref.current.offsetLeft }\n                        posY={ this.ref.current.offsetTop }\n                        parentWidth={ this.ref.current.offsetWidth }\n                        parentHeight={ this.ref.current.offsetHeight }\n                        onClickOutside={ this.closeColorsWindow }\n                        buttonRef={ this.ref }\n                        screenRotation={ this.screenRotation }\n                    />\n                    : this.deviceType === 'mobile' ?\n                    <ColorsWindowMobile\n                        onChooseColor={ this.onChangeValue }\n                        onClickOutside={ this.closeColorsWindow }\n                        screenRotation={ this.screenRotation }\n                    /> : null\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default OTColorInput;\n","import React from 'react';\n\nimport OTColorInput from './otcolorinput-react/OTColorInput';\n\nconst app = {\n    textAlign: 'center'\n}\n\nconst appHeader = {\n    backgroundColor: '#282c34',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white'\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            colorId: 55,\n            hexColor: null\n        }\n    }\n\n    onChangeValue = (value, hexColor) => {\n        this.setState({ colorId: value, hexColor: hexColor });\n    }\n\n    render() {\n        return (\n            <div style={ app }>\n                <header style={ appHeader }>\n                    <p>\n                        Example <code>otcolorinput-react.js</code>\n                    </p>\n\n                    <OTColorInput\n                        value={ this.state.colorId }\n                        onChange={ this.onChangeValue }\n                    />\n\n                    <p>\n                        Color id: { this.state.colorId } { this.state.hexColor !== null ? ' (' + this.state.hexColor + ')' : null }\n                    </p>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}